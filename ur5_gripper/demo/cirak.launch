<launch>
	<arg name="run_rviz" default="true"/>
	<!-- start kinect2_beta -->
  <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
    <arg name="publish_tf" value="true"/>
    <arg name="fps_limit" value="5"/>
    <arg name="base_name" value="kinect2_beta"/>
    <arg name="max_depth" value="3.0"/>
    <arg name="use_nodelet" value="false"/>
    <arg name="output" value="log"/>
  </include>

  <include file="$(find ur5_gripper)/demo/ur5_gripper_bringup.launch"> 
  <!-- <include file="$(find ur_modern_driver)/launch/ur5_bringup.launch">  -->
        <arg name="robot_ip" value="10.0.0.2"/>
  </include>

  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="camera_name" default="/kinect2_beta/hd" />
  <arg name="camera_frame" default="/kinect2_beta_rgb_optical_frame" />
  <arg name="image_topic" default="image_color_rect" />

  <!-- Set parameters -->
  <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find apriltag_ros)/config/tags.yaml" ns="$(arg node_namespace)" />
  
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
       <!-- Remap topics from those used in code to those on the ROS network -->
    
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="true" />    
    <param name="publish_tf" type="bool" value="true"/>
  </node>

 <node pkg="tf2_ros" type="static_transform_publisher" name="ur5_tf_broadcaster3" args="-0.049 0.955 0.293 0.006 0.002 1.000 -0.009 calibration world" />
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="ur5_tf_broadcaster2" args="0.0 0.0 0.0 0.006 0.002 1.000 -0.009 calibration end_point" /> -->
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_calib" args="1.041 0.937 0.059 0.570 0.615 -0.387 -0.383 base_link kinect2_rgb_optical_frame" />-->
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_2_calib" args="-0.225  0.217 0.133 -0.786 0.0397  -0.0201  0.6159 base_link kinect2_2_rgb_optical_frame" />-->
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_gamma_calib" args="-0.4078 0.1942 0.1333 -0.7817 0.0134 -0.0028 0.6235 world kinect2_gamma_rgb_optical_frame" />-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_gamma_calib" args="0.41443 0.81563 0.4424 0.027078 0.76592 -0.64224 -0.01271 calibration kinect2_gamma_rgb_optical_frame"/> 
  <node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_alpha2_calib" args="-1.3942 0.65121 0.86606 -0.35725 0.75027 -0.50518 0.23293 calibration kinect2_alpha2_rgb_optical_frame" /> 
 <node pkg="tf2_ros" type="static_transform_publisher" name="kinect2_beta_calib" args="0.16854 -0.1464 1.2279 -0.58164 0.61468 -0.39952 -0.35249 kinect2_beta_rgb_optical_frame calibration" /> 
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="ur5_tf_broadcaster1" args="-1.14103484 0.16543097 0.53366396 0.664 -0.479 0.343 -0.459 world kinect2_alpha_link" /-->

 
<!--node pkg="cirak_tf" name="cirak_tf" type="cirak_tf"/--> 
  <arg name="config" default="false" />
  <arg unless="$(arg config)" name="command_args" value="" />
  <arg     if="$(arg config)" name="command_args" value="-d $(find ur5_gripper)/demo/demo.rviz" />
<group if="$(arg run_rviz)">  
	<node pkg="rviz" name="rviz" type="rviz" args="$(arg command_args)"/>
</group>
  <!-- <node pkg="apriltag_ros" name="scene" type="scene"/>
  <node pkg="apriltag_ros" name="objects" type="objects"/> -->
 <!-- <node pkg="screw_coordinator" name="screw_coordinator" type="screw_coordinator"/> -->
 <include file="$(find gripper_communication)/launch/gripper_communication.launch"/> 
</launch>
